{"version":3,"sources":["../../Jam/SoundExtension.js","../../Jam/Input.js","../../Jam/ImagesLoader.js","../../Jam/Thingy.js","../../Jam/Point.js","../../Jam/Rotation.js","../../Jam/Sprite.js","../../Jam/ImageSprite.js","../../Jam/SoundMultiChannel.js","../../Jam/SoundLooping.js","../../Jam/State.js","../../Jam/Background.js","../../Jam/ColorBackground.js","../../Jam/Rectangle.js","../../Jam/SplashScreen.js","../../Jam/Mouse.js","../../Jam/Keyboard.js","../../Jam/Engine.js","index.js"],"names":["setFormat","Audio","canPlayType","calculateMousePosition","ev","clientRect","point","x","clientX","left","document","documentElement","scrollLeft","y","clientY","top","scrollTop","ImagesLoaderItem","[object Object]","fileName","this","image","Image","ImagesLoader","imageList","path","_picsToLoad","onDone","listItem","onload","_imageOnLoad","bind","src","length","_beginLoadingImage","Thingy","children","thingy","push","i","indexOf","splice","engine","updateChildren","update","drawChildren","draw","Point","origin","angle","s","Math","sin","c","cos","xnew","ynew","rhs","Rotation","amount","speed","Sprite","super","rotation","center","scale","enabled","position","fps","updateNow","context","save","translate","rotate","drawNow","restore","ImageSprite","canvas","createElement","getContext","size","width","height","drawImage","SoundExtension","SoundMultiChannel","filename","channelCount","_filename","_channelCount","_channels","_currentChannel","currentTime","play","SoundLooping","_channel","loop","isPlaying","pause","volume","State","INIT","CYCLE","FINISH","state","init","cycle","finish","initDone","clearChildren","Background","ColorBackground","style","fillStyle","fillRect","Rectangle","p1","p2","minX","maxX","minY","maxY","dx","abs","a","b","tmp","SplashScreen","Button_Left","Button_Right","Button_Middle","Key_Up","Key_Down","Key_Left","Key_Right","Key_W","Key_A","Key_S","Key_D","Key_Space","InputStatus","Button_Back","Button_Forward","MouseLocation","Engine","cb","debugList","debug","timeToDo","lastUpdate","input","addEventListener","mouseDown","mouseUp","mouseMove","keyDown","keyUp","timeStamp","doFinish","doInit","window","focus","preventDefault","stopPropagation","button","Mouse.Button_Left","Mouse.Button_Right","Mouse.Button_Middle","getBoundingClientRect","keyCode","Keyboard.Key_Up","Keyboard.Key_Down","Keyboard.Key_Left","Keyboard.Key_Right","Keyboard.Key_W","Keyboard.Key_A","Keyboard.Key_S","Keyboard.Key_D","Keyboard.Key_Space","setState","requestAnimationFrame","cycleRunner","updateFps","start","Date","doCycle","drawDebug","valueOf","fillText","toPrecision","toString","dbg","IMAGE_LIST","TUNING","STARTUP_SPLASH","IMAGE_NUMBER","SHIP","X","Y","MOVE_SPEED","GRAVITY_MAX","GRAVITY_MIN","PIXEL_GRAV_MAX","SHIP_GUN","SHIP_JET","ASTEROID","LEVEL_DATA","ASTEROID_COUNT","Turning","Left","None","Right","BoundedImageSprite","Ship","isAccelerating","isFiring","turning","isUsingGravity","gravityAmount","gun","jet","calculateCenter","addChild","atan2","beginPath","arc","PI","fill","Pixel","pile","red","green","blue","alpha","random","life","addPixel","PixelPile","ship","pixels","Map","totalPixels","absorbedPixels","soundClaim","pixel","colorString","has","arr","get","set","clear","value","values","grav","gravMulti","maxSpeed","sx","sy","ikill","pix","dy","sort","u","d","r","key","LineCollision","isWall","Asteroid","pixelPile","lineEnd","tempPixels","getImageData","data","rotateAroundBy","putImageData","end","copy","floor","err","entryWound","wall","sanityCheck","e2","AsteroidHit","asteroid","LevelState","asteroids","background","soundLaser","levelNumber","sqrt","mouseWheel","evt","sign","deltaY","goPressed","setIsPlaying","potentialAsteroids","slice","distance","one","two","laserEnd","laserLength","multiplier","max","roid","intersectsLine","hits","newShipLoc","gunPosition","newMouseLoc","newRoidLoc","findLineEnd","plus","minus","timesAmount","hit","setVolume","pointyEnd","ctx","strokeStyle","lineWidth","moveTo","lineTo","stroke","supportsPassive","opts","Object","defineProperty","e","removeEventListener","passive","SplashState","splash","imageLoader","done","loadingDots","init2","beginLoading","font","text","game","getElementById","go"],"mappings":"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","sourcesContent":["export const SoundExtension = setFormat();\n\n/** @returns {string} */\nfunction setFormat() {\n    return new Audio().canPlayType('audio/mp3') ? '.mp3' : '.ogg';\n}\n","import * as Mouse from './Mouse.js';\r\nimport * as Keyboard from './Keyboard.js';\r\nimport { Point } from './Point.js';\r\n\r\nclass InputStatus {\r\n    constructor () {\r\n        this.Key_Up = false;\r\n        this.Key_Down = false;\r\n        this.Key_Left = false;\r\n        this.Key_Right = false;\r\n        this.Key_W = false;\r\n        this.Key_A = false;\r\n        this.Key_S = false;\r\n        this.Key_D = false;\r\n        this.Key_Space = false;\r\n\r\n        this.Button_Left = false;\r\n        this.Button_Right = false;\r\n        this.Button_Middle = false;\r\n        this.Button_Back = false;\r\n        this.Button_Forward = false;\r\n    \r\n        this.MouseLocation = new Point(0,0);\r\n    }\r\n}\r\n\r\n/**\r\n * Sets parameter point to the current mouse position.\r\n * \r\n * @export\r\n * @param {MouseEvent} ev \r\n * @param {ClientRect} clientRect \r\n * @param {Point} point \r\n */\r\nfunction calculateMousePosition(ev, clientRect, point) {\r\n    point.x = ev.clientX - clientRect.left + document.documentElement.scrollLeft;\r\n    point.y = ev.clientY - clientRect.top + document.documentElement.scrollTop;\r\n}\r\n\r\nexport { InputStatus, calculateMousePosition, Mouse, Keyboard };","// Set automagically based on setupLoadImages.\r\n// Based on code learned in https://www.udemy.com/how-to-program-games/ - seriously.\r\n\r\nexport class ImagesLoaderItem {\r\n    /** @param {string} fileName */\r\n    constructor(fileName) {\r\n        this.fileName = fileName;\r\n        this.image = new Image();\r\n    }\r\n}\r\n\r\nexport class ImagesLoader {\r\n\r\n    /**\r\n     * \r\n     * @param {Array<ImagesLoaderItem>} imageList \r\n     * @param {string} path \r\n     */\r\n    constructor(imageList, path) {\r\n        this.imageList = imageList;\r\n        this.path = path;\r\n        this._picsToLoad = 0;\r\n        this.onDone = null;\r\n    }\r\n\r\n    _imageOnLoad() {\r\n        this._picsToLoad--;\r\n        if (this._picsToLoad == 0) {\r\n            this.onDone();\r\n        }\r\n    }\r\n\r\n    /** @param {ImagesLoaderItem} listItem */\r\n    _beginLoadingImage(listItem) {\r\n        listItem.image.onload = this._imageOnLoad.bind(this);\r\n        listItem.image.src = this.path + listItem.fileName;\r\n    }\r\n\r\n    beginLoading() {\r\n        this._picsToLoad = this.imageList.length;\r\n        for (let listItem of this.imageList) {\r\n            this._beginLoadingImage(listItem);\r\n        }\r\n        return this.imageList.length;\r\n    }\r\n}","export class Thingy {\r\n\r\n    constructor() {\r\n        /** @type {Array<Thingy>} */\r\n        this.children = [];\r\n    }\r\n\r\n    /** @param {Thingy} thingy */\r\n    addChild(thingy) {\r\n        this.children.push(thingy);\r\n    }\r\n\r\n    /** @param {Thingy} thingy \r\n     * @returns {boolean}\r\n    */\r\n    removeChild(thingy) {\r\n        let i = this.children.indexOf(thingy);\r\n        if (i == -1) {\r\n            return false;\r\n        }\r\n        this.children.splice(i, 1);\r\n        return true;\r\n    }\r\n\r\n    clearChildren() {\r\n        this.children.splice(0);\r\n    }\r\n\r\n    /** @param {Engine} engine */\r\n    update(engine) {\r\n        this.updateChildren(engine);\r\n    }\r\n\r\n    /** @param {Engine} engine */\r\n    updateChildren(engine) {\r\n        for (let i = 0; i < this.children.length; ++i) {\r\n            this.children[i].update(engine);\r\n        }\r\n    }\r\n\r\n    /** @param {Engine} engine */\r\n    draw(engine) {\r\n        this.drawChildren(engine);\r\n    }\r\n\r\n    /** @param {Engine} engine */\r\n    drawChildren(engine) {\r\n        for (let i = 0; i < this.children.length; ++i) {\r\n            this.children[i].draw(engine);\r\n        }\r\n    }\r\n}","export class Point {\r\n    /**\r\n     * \r\n     * @param {number} x \r\n     * @param {number} y \r\n     */\r\n    constructor(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    /** @returns {Point} */\r\n    copy() {\r\n        return new Point(this.x, this.y);\r\n    }\r\n\r\n    // Courtesy of https://stackoverflow.com/a/2259502\r\n    /**\r\n     * \r\n     * @param {Point} origin \r\n     * @param {number} angle \r\n     */\r\n    rotateAroundBy(origin, angle)\r\n    {\r\n        const s = Math.sin(angle);\r\n        const c = Math.cos(angle);\r\n\r\n        // translate point back to origin:\r\n        this.x -= origin.x;\r\n        this.y -= origin.y;\r\n\r\n        // rotate point\r\n        const xnew = this.x * c - this.y * s;\r\n        const ynew = this.x * s + this.y * c;\r\n\r\n        // translate point back:\r\n        this.x = xnew + origin.x;\r\n        this.y = ynew + origin.y;\r\n    }\r\n\r\n    /** @param {Point} rhs\r\n     * @returns {Point}\r\n     */\r\n    plus(rhs) {\r\n        return new Point(this.x + rhs.x, this.y + rhs.y);\r\n    }\r\n\r\n    /** @param {number} rhs\r\n     * @returns {Point}\r\n     */\r\n    plusAmount(rhs) {\r\n        return new Point(this.x + rhs, this.y + rhs);\r\n    }\r\n    \r\n    /** @param {Point} rhs\r\n     * @returns {Point}\r\n     */\r\n    times(rhs) {\r\n        return new Point(this.x * rhs.x, this.y * rhs.y);\r\n    }\r\n    \r\n    /** @param {number} rhs\r\n     * @returns {Point}\r\n     */\r\n    timesAmount(rhs) {\r\n        return new Point(this.x * rhs, this.y * rhs);\r\n    }\r\n\r\n    /** @param {Point} rhs\r\n     * @returns {Point}\r\n     */\r\n    minus(rhs) {\r\n        return new Point(this.x - rhs.x, this.y - rhs.y);\r\n    }\r\n\r\n    /** @param {number} rhs\r\n     * @returns {Point}\r\n     */\r\n    minusAmount(rhs) {\r\n        return new Point(this.x - rhs, this.y - rhs);\r\n    }\r\n}","export class Rotation {\r\n    /**\r\n     * Creates an instance of Rotation.\r\n     * @param {number} amount \r\n     * @param {number} speed \r\n     */\r\n    constructor(amount, speed) {\r\n        this.amount = amount;\r\n        this.speed = speed;\r\n    }\r\n}","import { Thingy } from './Thingy.js';\r\nimport { Point } from './Point.js';\r\nimport { Rotation } from './Rotation.js';\r\n\r\nexport class Sprite extends Thingy {\r\n\r\n    /**\r\n     * Creates an instance of Sprite.\r\n     * @param {number} x \r\n     * @param {number} y \r\n     */\r\n    constructor(x, y) {\r\n        super();\r\n        this.speed = new Point(0,0);\r\n        this.rotation = new Rotation(0,0);\r\n        this.center = new Point(0,0);\r\n        this.scale = new Point(1.0,1.0);\r\n        this.enabled = true;\r\n        this.position = new Point(x,y);\r\n    }\r\n\r\n    /** @param {Engine} engine */\r\n    update(engine) {\r\n        this.position.x += this.speed.x / engine.fps;\r\n        this.position.y += this.speed.y / engine.fps;\r\n        this.rotation.amount += this.rotation.speed / engine.fps;\r\n        this.updateNow(engine);\r\n        this.updateChildren(engine);\r\n    }\r\n\r\n    /** @param {Engine} engine */\r\n    draw(engine) {\r\n        if (this.enabled) {\r\n            let c = engine.context;\r\n            c.save();\r\n            c.translate(this.position.x, this.position.y);\r\n            c.rotate(this.rotation.amount);\r\n            c.scale(this.scale.x, this.scale.y);\r\n            this.drawNow(engine);\r\n            this.drawChildren(engine);\r\n            c.restore();\r\n        }\r\n    }\r\n\r\n    /* eslint-disable no-unused-vars */\r\n\r\n    /** @param {Engine} engine */\r\n    drawNow(engine) {}\r\n\r\n    /** @param {Engine} engine */\r\n    updateNow(engine) {}\r\n\r\n    /* eslint-enable no-unused-vars */\r\n}","import { Sprite } from './Sprite.js';\r\nimport { Point } from './Point.js';\r\n\r\nexport class ImageSprite extends Sprite {\r\n\r\n    /**\r\n     * Creates an instance of ImageSprite.\r\n     * @param {number} x \r\n     * @param {number} y \r\n     * @param {HTMLImageElement} image \r\n     */\r\n    constructor(x, y, image) {\r\n        super(x,y);\r\n        /** @type {HTMLCanvasElement} */\r\n        this.canvas = document.createElement('canvas');\r\n        this.context = this.canvas.getContext('2d');\r\n        this.size = new Point(image.width, image.height);\r\n        this.canvas.width = image.width;\r\n        this.canvas.height = image.height;\r\n        this.context.drawImage(image, 0,0);\r\n    }\r\n\r\n    /** @param {Engine} engine */\r\n    drawNow(engine) {\r\n        engine.context.drawImage(this.canvas, this.center.x, this.center.y);\r\n    }\r\n\r\n    calculateCenter() {\r\n        this.center.x = this.size.x * -0.5;\r\n        this.center.y = this.size.y * -0.5;\r\n    }\r\n}","import { SoundExtension } from './SoundExtension.js';\r\n\r\n// Concept from Hands-On Intro to Game Programming-v5 p378.\r\n\r\nexport class SoundMultiChannel {\r\n\r\n    /**\r\n     * Creates an instance of SoundMultiChannel.\r\n     * @param {string} filename \r\n     * @param {number} [channelCount=2] \r\n     */\r\n    constructor(filename, channelCount = 2) {\r\n        this._filename = filename;\r\n        this._channelCount = channelCount;\r\n        this._channels = [];\r\n        this._currentChannel = 0;\r\n        for (let i = 0; i < channelCount; ++i) {\r\n            this._channels.push(new Audio(filename+SoundExtension));\r\n        }\r\n    }\r\n\r\n    play() {\r\n        this._channels[this._currentChannel].currentTime = 0;\r\n        this._channels[this._currentChannel].play();\r\n        if (++this._currentChannel >= this._channelCount) {\r\n            this._currentChannel = 0;\r\n        }\r\n    }\r\n}","import { SoundExtension } from './SoundExtension.js';\r\n\r\n// Concept from Hands-On Intro to Game Programming-v5 p386.\r\nexport class SoundLooping {\r\n    \r\n    /** @param {string} filename */\r\n    constructor(filename) {\r\n        this._channel = new Audio(filename+SoundExtension);\r\n        this._channel.loop = true;\r\n    }\r\n\r\n    /** @param {boolean} isPlaying */\r\n    setIsPlaying(isPlaying) {\r\n        if (isPlaying) {\r\n            this._channel.play();\r\n        } else {\r\n            this._channel.pause();\r\n        }\r\n    }\r\n\r\n    /** @param {number} volume */\r\n    setVolume(volume) {\r\n        this._channel.volume = volume;\r\n    }\r\n}","export class State {\r\n    \r\n    static get INIT() {return  0; }\r\n    static get CYCLE() {return  1; }\r\n    static get FINISH() {return  2; }\r\n\r\n    constructor() {\r\n        this.state = State.INIT;\r\n    }\r\n    \r\n    /** @param {Engine} engine */\r\n    doInit(engine) {\r\n        this.init(engine);\r\n    }\r\n\r\n    /** @param {Engine} engine */\r\n    doCycle(engine) {\r\n        if (this.state == State.CYCLE) {\r\n            this.cycle(engine);\r\n        }\r\n    }\r\n\r\n    /** @param {Engine} engine */\r\n    doFinish(engine) {\r\n        if (this.state == State.CYCLE) {\r\n            this.state = State.FINISH;\r\n            this.finish(engine);\r\n        }\r\n    }\r\n\r\n    initDone() {\r\n        this.state = State.CYCLE;\r\n    }\r\n\r\n    /* eslint-disable no-unused-vars */\r\n\r\n    /** @param {Engine} engine */\r\n    init(engine) { this.initDone(); }\r\n    /** @param {Engine} engine */\r\n    cycle(engine) {}\r\n    \r\n    /* eslint-enable no-unused-vars */\r\n\r\n    /** @param {Engine} engine */\r\n    finish(engine) { engine.clearChildren(); }\r\n}","import { Thingy } from './Thingy.js';\r\n\r\nexport class Background extends Thingy {\r\n    constructor() {\r\n        super();\r\n    }\r\n}","import { Background } from './Background.js';\r\n\r\nexport class ColorBackground extends Background {\r\n    /** @param {string} style */\r\n    constructor(style) {\r\n        super();\r\n        this.style = style;\r\n    }\r\n\r\n    /** @param {Engine} engine */\r\n    draw(engine) {\r\n        engine.context.fillStyle = this.style;\r\n        engine.context.fillRect(0,0, engine.canvas.width,engine.canvas.height);\r\n    }\r\n}","import { Point } from './Point.js';\r\n\r\nexport class Rectangle {\r\n    \r\n    /**\r\n     * \r\n     * @param {number} x \r\n     * @param {number} y \r\n     * @param {number} width \r\n     * @param {number} height \r\n     */\r\n    constructor(x, y, width, height) {\r\n        this.position = new Point(x,y);\r\n        this.size = new Point(width, height);\r\n    }\r\n\r\n    /**\r\n     * @param {Point} p1 \r\n     * @param {Point} p2 \r\n     * @returns {boolean} \r\n     */\r\n    intersectsLine(p1, p2) {\r\n        // Parts from https://stackoverflow.com/a/100165 which led to https://jsfiddle.net/77eej/2/ thanks to https://stackoverflow.com/users/1382949/urraka\r\n        let minX = p1.x;\r\n        let maxX = p2.x;\r\n        \r\n        if (p1.x > p2.x) {\r\n            minX = p2.x;\r\n            maxX = p1.x;\r\n        }\r\n        \r\n        if (maxX > this.position.x + this.size.x)\r\n            maxX = this.position.x + this.size.x;\r\n        \r\n        if (minX < this.position.x)\r\n            minX = this.position.x;\r\n        \r\n        if (minX > maxX)\r\n            return false;\r\n        \r\n        var minY = p1.y;\r\n        var maxY = p2.y;\r\n        \r\n        var dx = p2.x - p1.x;\r\n        \r\n        if (Math.abs(dx) > 0.0000001) {\r\n            var a = (p2.y - p1.y) / dx;\r\n            var b = p1.y - a * p1.x;\r\n            minY = a * minX + b;\r\n            maxY = a * maxX + b;\r\n        }\r\n        \r\n        if (minY > maxY) {\r\n            var tmp = maxY;\r\n            maxY = minY;\r\n            minY = tmp;\r\n        }\r\n        \r\n        if (maxY > this.position.y + this.size.y)\r\n            maxY = this.position.y + this.size.y;\r\n        \r\n        if (minY < this.position.y)\r\n            minY = this.position.y;\r\n        \r\n        if (minY > maxY)\r\n            return false;\r\n        \r\n        return true;\r\n    }\r\n}\r\n","import { Thingy } from './Thingy.js';\r\n\r\nexport class SplashScreen extends Thingy {\r\n    /**\r\n     * Creates an instance of SplashScreen.\r\n     * @param {HTMLImageElement} image \r\n     */\r\n    constructor(image) {\r\n        super();\r\n        this.image = image;\r\n    }\r\n\r\n    /** @param {Engine} engine */\r\n    draw(engine) {\r\n        engine.context.drawImage(this.image, 0, 0);\r\n        this.drawChildren(engine);\r\n    }\r\n}","export const Button_None_Flag = 0;\nexport const Button_Left_Flag = 1;\nexport const Button_Right_Flag = 2;\nexport const Button_Middle_Flag = 4;\nexport const Button_Back_Flag = 8;\nexport const Button_Forward_Flag = 16;\nexport const Button_Left = 0;\nexport const Button_Right = 2;\nexport const Button_Middle = 1;\nexport const Button_Back = 3;\nexport const Button_Forward = 4;","export const Key_Up = 38;\nexport const Key_Down = 40;\nexport const Key_Left = 37;\nexport const Key_Right = 39;\nexport const Key_W = 87;\nexport const Key_A = 65;\nexport const Key_S = 83;\nexport const Key_D = 68;\nexport const Key_Space = 32;","import { Thingy } from './Thingy.js';\r\nimport { Mouse, Keyboard, InputStatus, calculateMousePosition } from './Input.js';\r\n\r\nexport class Engine extends Thingy {\r\n    \r\n    /** @param {function():string} cb */\r\n    addDebugItem(cb) {\r\n        this.debugList.push(cb);\r\n    }\r\n\r\n    /** @param {function():string} cb\r\n     * @returns {boolean}\r\n    */\r\n    removeDebugItem(cb) {\r\n        let i = this.debugList.indexOf(cb);\r\n        if (i == -1) {\r\n            return false;\r\n        }\r\n        this.debugList.splice(i, 1);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of Engine.\r\n     * @param {HTMLCanvasElement} canvas \r\n     * @param {State} state \r\n     * @param {boolean} [debug=false] \r\n     */\r\n    constructor(canvas, state, debug = false) {\r\n        super();\r\n        \r\n        this.fps = 0;\r\n        this.timeToDo = 0;\r\n        this.lastUpdate = 0;\r\n        /** @type {CanvasRenderingContext2D} */\r\n        this.input = new InputStatus();\r\n\r\n        this.canvas = canvas;\r\n        this.state = state;\r\n        this.debug = debug;\r\n\r\n        this.debugList = [];\r\n\r\n        this.context = canvas.getContext('2d');\r\n        // Set up handlers.\r\n        this.canvas.addEventListener('mousedown', this.mouseDown.bind(this));\r\n        this.canvas.addEventListener('mouseup', this.mouseUp.bind(this));\r\n        this.canvas.addEventListener('mousemove', this.mouseMove.bind(this));\r\n        document.addEventListener('keydown', this.keyDown.bind(this));\r\n        document.addEventListener('keyup', this.keyUp.bind(this));\r\n    }\r\n\r\n    /** @param {number} timeStamp */\r\n    updateFps(timeStamp) {\r\n        this.fps = 1/((timeStamp - this.lastUpdate)/1000);\r\n        this.lastUpdate = timeStamp;\r\n    }\r\n\r\n    /** @param {State} state */\r\n    setState(state) {\r\n        if (this.state) {\r\n            this.state.doFinish(this);\r\n        }\r\n        this.state = state;\r\n        this.state.doInit(this);\r\n    }\r\n\r\n    /** @param {MouseEvent} ev */\r\n    mouseDown(ev) {\r\n        window.focus(); ev.preventDefault(); ev.stopPropagation(); \r\n        ev.preventDefault();\r\n        switch(ev.button) {\r\n            case Mouse.Button_Left : this.input.Button_Left = true; break;\r\n            case Mouse.Button_Right : this.input.Button_Right = true; break;\r\n            case Mouse.Button_Middle : this.input.Button_Middle = true; break;\r\n        }\r\n    }\r\n    /** @param {MouseEvent} ev */\r\n    mouseUp(ev) {\r\n        window.focus(); ev.preventDefault(); ev.stopPropagation(); \r\n        switch(ev.button) {\r\n            case Mouse.Button_Left : this.input.Button_Left = false; break;\r\n            case Mouse.Button_Right : this.input.Button_Right = false; break;\r\n            case Mouse.Button_Middle : this.input.Button_Middle = false; break;\r\n        }\r\n    }\r\n\r\n    /** @param {MouseEvent} ev */\r\n    mouseMove(ev) {\r\n        calculateMousePosition(ev, this.canvas.getBoundingClientRect(), this.input.MouseLocation);\r\n    }\r\n\r\n    /** @param {KeyboardEvent} ev */\r\n    keyDown(ev) {\r\n        window.focus(); ev.preventDefault(); ev.stopPropagation(); \r\n        switch (ev.keyCode) {\r\n            case Keyboard.Key_Up : this.input.Key_Up = true; break;\r\n            case Keyboard.Key_Down : this.input.Key_Down = true; break;\r\n            case Keyboard.Key_Left : this.input.Key_Left = true; break;\r\n            case Keyboard.Key_Right : this.input.Key_Right = true; break;\r\n            case Keyboard.Key_W : this.input.Key_W = true; break;\r\n            case Keyboard.Key_A : this.input.Key_A = true; break;\r\n            case Keyboard.Key_S : this.input.Key_S = true; break;\r\n            case Keyboard.Key_D : this.input.Key_D = true; break;\r\n            case Keyboard.Key_Space : this.input.Key_Space = true; break;\r\n        }\r\n    }\r\n    \r\n    /** @param {KeyboardEvent} ev */\r\n    keyUp(ev) {\r\n        window.focus(); ev.preventDefault(); ev.stopPropagation(); \r\n        switch (ev.keyCode) {\r\n            case Keyboard.Key_Up : this.input.Key_Up = false; break;\r\n            case Keyboard.Key_Down : this.input.Key_Down = false; break;\r\n            case Keyboard.Key_Left : this.input.Key_Left = false; break;\r\n            case Keyboard.Key_Right : this.input.Key_Right = false; break;\r\n            case Keyboard.Key_W : this.input.Key_W = false; break;\r\n            case Keyboard.Key_A : this.input.Key_A = false; break;\r\n            case Keyboard.Key_S : this.input.Key_S = false; break;\r\n            case Keyboard.Key_D : this.input.Key_D = false; break;\r\n            case Keyboard.Key_Space : this.input.Key_Space = false; break;\r\n        }\r\n    }\r\n\r\n    go() {\r\n        this.setState(this.state); // Inits too.\r\n        requestAnimationFrame(this.cycleRunner.bind(this));\r\n    }\r\n\r\n    /** @param {number} timeStamp */\r\n    cycleRunner(timeStamp) {\r\n        this.updateFps(timeStamp);\r\n        let start = new Date();\r\n        this.update(this);\r\n        this.draw(this);\r\n        this.state.doCycle(this);\r\n        if (this.debug) {\r\n            this.drawDebug();\r\n        }\r\n        requestAnimationFrame(this.cycleRunner.bind(this));\r\n        this.timeToDo = new Date().valueOf() - start.valueOf();\r\n    }\r\n\r\n    drawDebug() {\r\n        let y = 0;\r\n        const x = 10;\r\n        const yinc = 20;\r\n        const color = 'cyan';\r\n        let c = this.context;\r\n\r\n        c.fillStyle = color;\r\n        c.fillText('FPS: ' + this.fps.toPrecision(4).toString(), x, y += yinc);\r\n        //c.fillText('Time: ' + this.timeToDo, x, y += yinc);\r\n        for (let dbg of this.debugList) {\r\n            c.fillText(dbg(), x, y += yinc);\r\n        }\r\n    }\r\n}","import { ImagesLoader, ImagesLoaderItem } from './../../Jam/ImagesLoader.js';\r\nimport { ImageSprite } from './../../Jam/ImageSprite.js';\r\nimport { Point } from './../../Jam/Point.js';\r\nimport { Thingy } from './../../Jam/Thingy.js';\r\nimport { SoundMultiChannel } from './../../Jam/SoundMultiChannel.js';\r\nimport { SoundLooping } from './../../Jam/SoundLooping.js';\r\nimport { State } from './../../Jam/State.js';\r\nimport { ColorBackground } from './../../Jam/ColorBackground.js';\r\nimport { Rectangle } from './../../Jam/Rectangle.js';\r\nimport { SplashScreen } from './../../Jam/SplashScreen.js';\r\nimport { Engine } from './../../Jam/Engine.js'; \r\n\r\nconst IMAGE_LIST = [\r\n    new ImagesLoaderItem('startupSplash.png'),\r\n    new ImagesLoaderItem('shipBody.png'),\r\n    new ImagesLoaderItem('shipGun.png'),\r\n    new ImagesLoaderItem('shipJet.png'),\r\n    new ImagesLoaderItem('enemy0.png')\r\n];\r\n\r\n// Tuning values.\r\nconst TUNING = {\r\n    STARTUP_SPLASH: { IMAGE_NUMBER: 0},\r\n    SHIP:           { X: 300,   Y: 300, IMAGE_NUMBER: 1, MOVE_SPEED: 1.5, GRAVITY_MAX: 0.3, GRAVITY_MIN: 0.01, PIXEL_GRAV_MAX: 5.0 },\r\n    SHIP_GUN:       { X: 0,     Y: 0,   IMAGE_NUMBER: 2 },\r\n    SHIP_JET:       { X: 0,     Y: 0,   IMAGE_NUMBER: 3 },\r\n    ASTEROID:       { IMAGE_NUMBER: 4 },\r\n};\r\n\r\nconst LEVEL_DATA = [\r\n    { ASTEROID_COUNT: 10}\r\n];\r\n\r\n\r\nconst Turning = {\r\n    Left: -1,\r\n    None: 0,\r\n    Right: 1\r\n};\r\n\r\nclass BoundedImageSprite extends ImageSprite {\r\n    /** @param {Engine} engine */\r\n    updateNow(engine) {\r\n        super.updateNow(engine);\r\n        if ((this.position.x <= 0 && this.speed.x < 0) || (this.position.x >= engine.canvas.width && this.speed.x > 0)) {\r\n            this.speed.x *= -1;\r\n            this.speed.x *= 0.9;\r\n        }\r\n        if ((this.position.y <= 0 && this.speed.y < 0) || (this.position.y >= engine.canvas.height && this.speed.y > 0)) {\r\n            this.speed.y *= -1;\r\n            this.speed.y *= 0.9;\r\n        }\r\n    }\r\n}\r\n\r\nclass Ship extends BoundedImageSprite {\r\n    \r\n    constructor() {\r\n        super(TUNING.SHIP.X,TUNING.SHIP.Y, IMAGE_LIST[TUNING.SHIP.IMAGE_NUMBER].image);\r\n\r\n        this.isAccelerating = false;\r\n        this.isFiring = false;\r\n        this.turning = Turning.None;\r\n        this.isUsingGravity = false;\r\n        this.gravityAmount = TUNING.SHIP.GRAVITY_MAX;\r\n    \r\n\r\n        this.gun = new ImageSprite(TUNING.SHIP_GUN.X,TUNING.SHIP_GUN.Y,IMAGE_LIST[TUNING.SHIP_GUN.IMAGE_NUMBER].image);\r\n        this.jet = new ImageSprite(TUNING.SHIP_JET.X,TUNING.SHIP_JET.Y,IMAGE_LIST[TUNING.SHIP_JET.IMAGE_NUMBER].image);\r\n        //this.gravity = new ImageSprite(TUNING.SHIP_GRAVITY.X,TUNING.SHIP_GRAVITY.Y,IMAGE_LIST[TUNING.SHIP_GRAVITY.IMAGE_NUMBER].image);\r\n        this.calculateCenter();\r\n        this.gun.calculateCenter();\r\n        this.jet.calculateCenter();\r\n        //this.gravity.calculateCenter();\r\n\r\n        this.jet.enabled = false;\r\n        \r\n        this.addChild(this.gun);\r\n        this.addChild(this.jet);\r\n        //this.addChild(this.gravity);\r\n    }\r\n\r\n    /** @param {Engine} engine */\r\n    updateNow(engine) {\r\n        super.updateNow(engine);\r\n        // Maybe a cheap fix to just derotate it...\r\n        this.gun.rotation.amount = Math.atan2(engine.input.MouseLocation.y - this.position.y, engine.input.MouseLocation.x - this.position.x) - this.rotation.amount;\r\n        this.jet.enabled = this.isAccelerating;\r\n        if (this.isAccelerating) {\r\n            this.speed.x += Math.cos(this.rotation.amount) * TUNING.SHIP.MOVE_SPEED;\r\n            this.speed.y += Math.sin(this.rotation.amount) * TUNING.SHIP.MOVE_SPEED;\r\n        }\r\n        this.rotation.amount += this.turning * TUNING.SHIP.MOVE_SPEED / engine.fps;\r\n    }\r\n\r\n    gunPosition() {\r\n        let x = this.position.x + Math.cos(this.gun.rotation.amount + this.rotation.amount) * 12.7;\r\n        let y = this.position.y + Math.sin(this.gun.rotation.amount + this.rotation.amount) * 12.7;\r\n        return new Point(x,y);\r\n    }\r\n\r\n    /** @param {Engine} engine */\r\n    drawNow(engine) {\r\n        super.drawNow(engine);\r\n        if (this.isUsingGravity) {\r\n            engine.context.fillStyle = 'rgba(0,200,100,0.3)';\r\n            //context.strokeStyle = 'rbga(0,0,255,0.3)';\r\n            engine.context.beginPath();\r\n            engine.context.arc(0,0,(TUNING.SHIP.GRAVITY_MAX-(TUNING.SHIP.GRAVITY_MAX-this.gravityAmount))*100,0,Math.PI*2);\r\n            engine.context.fill();\r\n            //context.stroke();\r\n            //bjDrawCenteredBitmapWithRotation(context, this.x, this.y, this.shipGravityImage, this.rotation);\r\n        }\r\n    }\r\n}\r\n\r\nclass Pixel {\r\n    /**\r\n     * Creates an instance of Pixel.\r\n     * @param {PixelPile} pile \r\n     * @param {Point} position \r\n     * @param {number} red \r\n     * @param {number} green \r\n     * @param {number} blue \r\n     * @param {number} alpha \r\n     */\r\n    constructor(pile, position, red, green, blue, alpha){\r\n        this.speed = new Point(Math.random() * 2 - 1, Math.random() * 2 - 1);\r\n        this.position = position;\r\n        this.life = 100;\r\n        pile.addPixel(this, `rgba(${red},${green},${blue},${alpha}`);\r\n    }\r\n}\r\n\r\nclass PixelPile extends Thingy {\r\n\r\n\r\n    /** @param {Ship} ship */\r\n    constructor(ship) {\r\n        super();\r\n        this.ship = ship;\r\n        this.pixels = new Map();\r\n        this.totalPixels = 0;\r\n        this.absorbedPixels = 0;\r\n        this.soundClaim = new SoundMultiChannel('audio/claim', 6);\r\n\r\n    }\r\n\r\n    /**\r\n     * @param {Pixel} pixel \r\n     * @param {string} colorString \r\n     */\r\n    addPixel(pixel, colorString) {\r\n\r\n        if (!this.pixels.has(colorString)) {\r\n            this.pixels.set(colorString, []);\r\n        } else {\r\n            let arr = this.pixels.get(colorString);\r\n            if (arr) {\r\n                arr.push(pixel);\r\n            }\r\n        }\r\n        this.totalPixels++;\r\n    }\r\n\r\n    clearPixels() {\r\n        this.pixels.clear();\r\n    }\r\n\r\n    /** @param {Engine} engine */\r\n    update(engine) {\r\n\r\n        for (let value of this.pixels.values()) {\r\n            const moveSpeed = 5.0;\r\n            let grav = this.ship.isUsingGravity;\r\n            let gravMulti = this.ship.gravityAmount;\r\n            let maxSpeed = TUNING.SHIP.PIXEL_GRAV_MAX;\r\n            let sx = this.ship.position.x;\r\n            let sy = this.ship.position.y;\r\n            let ikill = [];\r\n            let i = 0;\r\n            for (let pix of value) {\r\n                if ((pix.position.x <= 0 && pix.speed.x < 0) || (pix.position.x >= engine.canvas.width && pix.speed.x > 0)) {\r\n                    pix.speed.x *= -1;\r\n                    pix.speed.x *= 0.9;\r\n                }\r\n                if ((pix.position.y <= 0 && pix.speed.y < 0) || (pix.position.y >= engine.canvas.height && pix.speed.y > 0)) {\r\n                    pix.speed.y *= -1;\r\n                    pix.speed.y *= 0.9;\r\n                }\r\n                if (grav) {\r\n                    let dx = sx - pix.position.x;\r\n                    let dy = sy - pix.position.y;\r\n                    if (Math.abs(dx) < 15 && Math.abs(dy) < 15) {\r\n                        if (--pix.life <= 0) {\r\n                            ikill.push(i);\r\n                            this.absorbedPixels++;\r\n                            this.soundClaim.play();\r\n                        }\r\n                    }\r\n                    let angle = Math.atan2(dy, dx);\r\n                    pix.speed.x += Math.cos(angle) * gravMulti;\r\n                    pix.speed.y += Math.sin(angle) * gravMulti;\r\n                    if (pix.speed.x > maxSpeed) pix.speed.x = maxSpeed;\r\n                    if (pix.speed.y > maxSpeed) pix.speed.y = maxSpeed;\r\n                    if (pix.speed.x < -maxSpeed) pix.speed.x = -maxSpeed;\r\n                    if (pix.speed.y < -maxSpeed) pix.speed.y = -maxSpeed;\r\n                }\r\n                pix.position.x += moveSpeed * pix.speed.x / engine.fps;\r\n                pix.position.y += moveSpeed * pix.speed.y / engine.fps;\r\n                ++i;\r\n            }\r\n            // Reverse sort pixels to remove, must remove from end or indexes are worthless.\r\n            ikill.sort((u,d) => u<d);\r\n            for(let r of ikill) {\r\n                value.splice(r,1);\r\n                this.totalPixels--;\r\n            }\r\n        }\r\n    }\r\n\r\n    /** @param {Engine} engine */\r\n    draw(engine) {\r\n        for (let [key, value] of this.pixels) {\r\n            engine.context.fillStyle = key;\r\n            for (let pix of value) {\r\n                engine.context.fillRect(pix.position.x,pix.position.y, 1,1);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass LineCollision extends Point {\r\n    /**\r\n     * Creates an instance of LineCollision.\r\n     * @param {number} x \r\n     * @param {number} y \r\n     * @param {boolean} isWall \r\n     */\r\n    constructor(x, y, isWall) {\r\n        super(x,y);\r\n        this.isWall = isWall;\r\n    }\r\n}\r\n\r\nclass Asteroid extends BoundedImageSprite {\r\n\r\n    /**\r\n     * Creates an instance of Asteroid.\r\n     * @param {number} x \r\n     * @param {number} y \r\n     */\r\n    constructor(x, y) {\r\n        super(x,y, IMAGE_LIST[TUNING.ASTEROID.IMAGE_NUMBER].image);\r\n        this.rotation.speed = (Math.random() - 0.5) * 0.5;\r\n        this.speed.x = (Math.random() - 0.5) * 25;\r\n        this.speed.y = (Math.random() - 0.5) * 25;\r\n        this.calculateCenter();\r\n    }\r\n\r\n    // lineEnd will by unrotated by this function!\r\n    /**\r\n     * @param {PixelPile} pixelPile \r\n     * @param {Point} lineEnd \r\n     */\r\n    hit(pixelPile, lineEnd) {\r\n        // TODO: No magic numbers.\r\n        const width = this.size.x;\r\n        const height = this.size.y;\r\n        let tempPixels = this.context.getImageData(0,0, width,height);\r\n        let data = tempPixels.data;\r\n        let i =(lineEnd.y*this.canvas.width+lineEnd.x)*4;\r\n        // FIXME: use center or half, inconsistent.\r\n        lineEnd.rotateAroundBy(new Point (width*0.5,height*0.5), this.rotation.amount);\r\n        /*let tempPixel =*/ new Pixel(pixelPile,\r\n                new Point(this.position.x+lineEnd.x-width*0.5,this.position.y+lineEnd.y-height*0.5),\r\n                data[i+0],data[i+1],data[i+2],data[i+3]\r\n            );\r\n        data[i+3] = 0;\r\n        this.context.putImageData(tempPixels, 0,0);\r\n    }\r\n\r\n    /**\r\n     * @param {Point} origin \r\n     * @param {Point} end \r\n     * @returns {LineCollision} \r\n     */\r\n    findLineEnd(origin, end) {\r\n        \r\n        // TODO: pass by value I mean cmon.\r\n        origin = origin.copy();\r\n        end = end.copy();\r\n        origin.x = Math.floor(origin.x);\r\n        origin.y = Math.floor(origin.y);\r\n        end.x = Math.floor(end.x);\r\n        end.y = Math.floor(end.y);\r\n        \r\n        let dx = Math.abs(end.x-origin.x);\r\n        let dy = Math.abs(end.y-origin.y);\r\n        let sx = (origin.x < end.x) ? 1 : -1;\r\n        let sy = (origin.y < end.y) ? 1 : -1;\r\n        let err = dx-dy;\r\n        let entryWound = { x: false, y: false };\r\n        //var ox = x0, oy = y0;\r\n\r\n        let data = this.context.getImageData(0, 0, this.size.x, this.size.y).data;\r\n        \r\n        let wall = false;\r\n    \r\n        let sanityCheck = this.size.x * this.size.y * 2;\r\n\r\n        // FIXME: Infinite loop :(\r\n        while(true){\r\n            if (--sanityCheck < 0) {\r\n                //console.log('Sanity check failed...');\r\n                wall = true;\r\n                break;\r\n            }\r\n            // Has come in range horizontally.\r\n            if (origin.x < this.size.x && origin.x >= 0) {\r\n                entryWound.x = true;\r\n            }\r\n            // Has come in range vertically.\r\n            if (origin.y < this.size.y && origin.y > 0) {\r\n                entryWound.y = true;\r\n            }\r\n            // Gone out the other side horizontally.\r\n            if (entryWound.x && (origin.x >= this.size.x || origin.x < 0)) {\r\n                wall = true;\r\n                break;\r\n            }\r\n            // Gone out the other side vertically.\r\n            if (entryWound.y && (origin.y >= this.size.y || origin.y < 0)) {\r\n                wall = true;\r\n                break;\r\n            }\r\n            // Inside the context.\r\n            if (entryWound.x && entryWound.y) {\r\n                let i = ((origin.y*this.size.x)+(origin.x))*4;\r\n                // TODO: No magic numbers!\r\n                let c = data[i+3];//data[i+RED_BYTE] + data[i+GREEN_BYTE] + data[i+BLUE_BYTE];\r\n                // Hit a valid pixel.\r\n                if (c != 0) {\r\n                    wall = false;\r\n                    break;\r\n                }\r\n            }\r\n            let e2 = err << 1;\r\n            if (e2 >-dy){ err -= dy; origin.x += sx; }\r\n            if (e2 < dx){ err += dx; origin.y += sy; }\r\n        }\r\n        \r\n        return new LineCollision(origin.x,origin.y, wall);\r\n     }\r\n    \r\n}\r\n\r\n/*class HUD extends Thingy {\r\n\r\n    radgrad : CanvasGradient;\r\n    image : HTMLImageElement;\r\n\r\n    constructor(engine: Engine) {\r\n        super();\r\n\r\n        this.image = IMAGE_LIST[TUNING.HUD.IMAGE_NUMBER].image;\r\n\r\n        /*let ctx : CanvasRenderingContext2D = engine.context;\r\n        let center = new Point(engine.canvas.width/2, engine.canvas.height/2);\r\n        // Some credit to https://stackoverflow.com/a/5476576\r\n        this.radgrad = ctx.createRadialGradient(center.x,center.y,TUNING.WORLD.RADIUS,center.x,center.y,TUNING.WORLD.RADIUS + 5);\r\n        this.radgrad.addColorStop(0, 'rgba(255,0,0,0)');\r\n        this.radgrad.addColorStop(0.8, 'rgba(228,0,0,.9)');\r\n        this.radgrad.addColorStop(1, 'rgba(228,0,0,1)');\r\n        *//*\r\n    }\r\n\r\n    draw(engine : Engine) {\r\n\r\n        engine.context.drawImage(this.image,0,0);\r\n\r\n        /*engine.context.fillStyle = this.radgrad;\r\n        engine.context.fillRect(0,0,engine.canvas.width-1,engine.canvas.height-1);\r\n        *//*\r\n    }\r\n}*/\r\n\r\nclass AsteroidHit {\r\n    /**\r\n     * Creates an instance of AsteroidHit.\r\n     * @param {Asteroid} asteroid \r\n     * @param {LineCollision} lineEnd \r\n     */\r\n    constructor(asteroid, lineEnd) {\r\n        this.asteroid = asteroid;\r\n        this.lineEnd = lineEnd;\r\n    }\r\n}\r\n\r\nclass LevelState extends State {\r\n\r\n    constructor() {\r\n        super();\r\n        /** @type {Array<Asteroid>} */\r\n        this.asteroids = [];\r\n        /** @type {ImageData} */\r\n        this.background = null;\r\n        /** @type {Ship} */\r\n        this.ship = null;\r\n        /** @type {PixelPile} */\r\n        this.pixelPile = null;\r\n        /** @type {SoundLooping} */\r\n        this.soundLaser = new SoundLooping('audio/laser');\r\n        this.levelNumber = 0;\r\n    }   \r\n\r\n    /** @param {Engine} engine */\r\n    init(engine) {\r\n\r\n        // TODO: Star field instead of blackish.\r\n        engine.addChild(new ColorBackground('rgb(0,0,32)'));\r\n\r\n        this.ship = new Ship();\r\n        \r\n        this.pixelPile = new PixelPile(this.ship);\r\n\r\n        engine.addChild(this.ship);\r\n        \r\n        for (let i = 0; i < LEVEL_DATA[this.levelNumber].ASTEROID_COUNT; ++i) {\r\n            let x = 0;\r\n            let y = 0;\r\n            do {\r\n                x = Math.random() * engine.canvas.width;\r\n                y = Math.random() * engine.canvas.height;\r\n            } while (Math.sqrt(((this.ship.position.x - x) * (this.ship.position.x - x)) + ((this.ship.position.y - y) * (this.ship.position.y - y))) < 200);\r\n            \r\n            let asteroid = new Asteroid(x,y);\r\n            this.asteroids.push(asteroid);\r\n            engine.addChild(asteroid);\r\n        }\r\n\r\n        //this.hud = new HUD(engine);\r\n        //engine.addChild(this.hud);\r\n\r\n        engine.addChild(this.pixelPile);\r\n\r\n        // Test via a getter in the options object to see if the passive property is accessed\r\n        // Coutesy https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\r\n        /*let supportsPassive = false;\r\n        try {\r\n            var opts = Object.defineProperty({}, 'passive', {\r\n                get: function() {\r\n                    supportsPassive = true;\r\n                }\r\n            });\r\n            window.addEventListener(\"test\", null as any, opts);\r\n        } catch (e) {}*/\r\n\r\n        // Use our detect's results. passive applied if supported, capture will be false either way.\r\n        //engine.canvas.addEventListener('wheel', this.mouseWheel.bind(this), (supportsPassive ? { passive: true } : false) as any);\r\n        engine.canvas.addEventListener('wheel', this.mouseWheel.bind(this));\r\n        engine.debugList.push(() => 'Free Pixels: ' + this.pixelPile.totalPixels);\r\n        engine.debugList.push(() => 'Absorbed Pixels: ' + this.pixelPile.absorbedPixels);\r\n\r\n        this.initDone();\r\n    }\r\n\r\n    /** @param {WheelEvent} evt */\r\n    mouseWheel(evt) {\r\n        evt.preventDefault();\r\n        this.ship.gravityAmount -= 0.01 * Math.sign(evt.deltaY);\r\n        //console.log(evt.deltaY);\r\n        if (this.ship.gravityAmount < TUNING.SHIP.GRAVITY_MIN) { \r\n            this.ship.gravityAmount = TUNING.SHIP.GRAVITY_MIN;\r\n            //ship.usingGravity = false;\r\n        }\r\n        if (this.ship.gravityAmount > TUNING.SHIP.GRAVITY_MAX) this.ship.gravityAmount = TUNING.SHIP.GRAVITY_MAX;\r\n        //if (gravity > 0) ship.usingGravity = true;\r\n    }\r\n\r\n    /** @param {Engine} engine */\r\n    cycle(engine) {\r\n\r\n        // TODO: HUD.\r\n\r\n        let goPressed = engine.input.Key_W || engine.input.Key_Up;\r\n        this.ship.isAccelerating = goPressed;\r\n\r\n        this.ship.isUsingGravity = engine.input.Key_Space;\r\n\r\n        if (engine.input.Key_A || engine.input.Key_Left) {\r\n            this.ship.turning = Turning.Left;\r\n        } else if (engine.input.Key_D || engine.input.Key_Right) {\r\n            this.ship.turning = Turning.Right;\r\n        } else {\r\n            this.ship.turning = Turning.None;\r\n        }\r\n        this.ship.isFiring = engine.input.Button_Left;\r\n        this.soundLaser.setIsPlaying(engine.input.Button_Left);\r\n\r\n        if (this.ship.isFiring) {\r\n            /** @type {LineCollision} */\r\n            let lineEnd = null;\r\n            // Sort asteroids by distance.\r\n            /** @type {Array<Asteroid>} */\r\n            let potentialAsteroids = this.asteroids.slice();\r\n            /** @param {Point} one \r\n             * @param {Point} two\r\n             * @returns {number}\r\n            */\r\n            var distance = function (one, two) {\r\n                return Math.sqrt(((one.x - two.x) * (one.x - two.x)) + ((one.y - two.y) * (one.y - two.y)));\r\n            };\r\n            // Useless sort?\r\n            potentialAsteroids.sort( (a,b) => distance(this.ship.position, a.position) < distance(this.ship.position, b.position) );\r\n            \r\n            // Slim possible asteroids down by box collision.\r\n            // Create the laser... extend the line (Courtesy of https://stackoverflow.com/a/7741655)\r\n            let laserEnd = engine.input.MouseLocation.copy();\r\n            const laserLength = distance(this.ship.position, engine.input.MouseLocation);\r\n            const multiplier = Math.max(engine.canvas.width, engine.canvas.height);\r\n            laserEnd.x = laserEnd.x + (laserEnd.x - this.ship.position.x) / laserLength * multiplier;\r\n            laserEnd.y = laserEnd.y + (laserEnd.y - this.ship.position.y) / laserLength * multiplier;\r\n\r\n            for (let i = potentialAsteroids.length - 1; i >= 0; --i) { // In reverse so we can splice.\r\n                let roid = potentialAsteroids[i];\r\n                const max = Math.max(roid.size.x, roid.size.y);\r\n                const width = max * 1.4;\r\n                const height = max * 1.4;\r\n                const y = roid.position.y - height/2;\r\n                const x =  roid.position.x - width/2;\r\n                let asteroidRect = new Rectangle(x,y, width,height);\r\n                if (!asteroidRect.intersectsLine(this.ship.position, laserEnd)) {\r\n                    potentialAsteroids.splice(i,1);\r\n                }\r\n            }\r\n\r\n            // USED TO: Perform line find until one succeeds, or none.\r\n            // NOW: Keep ANY hits for later comparison.\r\n            /** @type {Array<AsteroidHit>} */\r\n            let hits = [];\r\n            for (let i = 0; i < potentialAsteroids.length; ++i) {\r\n                \r\n                // Un-rotate the origin around the asteroid.\r\n                let roid = potentialAsteroids[i];\r\n                let newShipLoc = this.ship.gunPosition();\r\n                let newMouseLoc = engine.input.MouseLocation.copy();\r\n                let newRoidLoc = roid.position.copy();\r\n                newRoidLoc.x -= roid.size.x / 2;\r\n                newRoidLoc.y -= roid.size.y / 2;\r\n                newShipLoc.rotateAroundBy(roid.position, roid.rotation.amount*-1);\r\n                newMouseLoc.rotateAroundBy(roid.position, roid.rotation.amount*-1);\r\n                \r\n                // Adjust for enemy centering. TODO: Use the center and not always half, or vice versa.\r\n                newShipLoc.x -= newRoidLoc.x;\r\n                newShipLoc.y -= newRoidLoc.y;\r\n                newMouseLoc.x -= newRoidLoc.x;\r\n                newMouseLoc.y -= newRoidLoc.y;\r\n\r\n                // Find the pixel that would be hit, if any.\r\n                lineEnd = roid.findLineEnd(newShipLoc, newMouseLoc);\r\n\r\n                // Rotate the position back around the roid.\r\n                //lineEnd.rotateAroundBy(newRoidLoc, roid.rotation.amount);\r\n\r\n                // Move to the roid position.\r\n                //lineEnd.x += roid.position.x;\r\n                //lineEnd.y += roid.position.y;\r\n\r\n                if (lineEnd != null && !lineEnd.isWall) {\r\n                    hits.push(new AsteroidHit(roid, lineEnd));\r\n                }\r\n            }\r\n\r\n            // FIXME: Repeated code, drawing in wrong part of loop.\r\n            if (hits.length != 0) {\r\n                hits.sort(\r\n                    (a,b) =>   distance(this.ship.position, a.asteroid.position.plus(a.lineEnd.minus(a.asteroid.size.timesAmount(0.5)))) > distance(this.ship.position, b.asteroid.position.plus(b.lineEnd.minus(b.asteroid.size.timesAmount(0.5))))\r\n                );\r\n                hits[0].asteroid.hit(this.pixelPile, hits[0].lineEnd);\r\n                this.soundLaser.setVolume(1.0);\r\n                let pointyEnd = hits[0].lineEnd.plus(hits[0].asteroid.position).minus(hits[0].asteroid.size.timesAmount(0.5));\r\n                let ctx = engine.context;\r\n                ctx.strokeStyle = 'rgb(255,0,0)';\r\n                ctx.lineWidth = 1;\r\n                ctx.beginPath();\r\n                ctx.moveTo(this.ship.gunPosition().x, this.ship.gunPosition().y);\r\n                ctx.lineTo(pointyEnd.x, pointyEnd.y);\r\n                ctx.stroke();\r\n            } else {\r\n                this.soundLaser.setVolume(0.3);\r\n                let ctx  = engine.context;\r\n                ctx.strokeStyle = 'rgb(255,0,0)';\r\n                ctx.lineWidth = 1;\r\n                ctx.beginPath();\r\n                ctx.moveTo(this.ship.gunPosition().x, this.ship.gunPosition().y);\r\n                ctx.lineTo(laserEnd.x, laserEnd.y);\r\n                ctx.stroke();\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    /** @param {Engine} engine */\r\n    finish(engine) {\r\n        // Test via a getter in the options object to see if the passive property is accessed\r\n        // Coutesy https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\r\n        let supportsPassive = false;\r\n        try {\r\n            var opts = Object.defineProperty({}, 'passive', {\r\n                get: function() {\r\n                    supportsPassive = true;\r\n                }\r\n            });\r\n            window.addEventListener(\"test\", null, opts);\r\n        } catch (e) {}\r\n        engine.canvas.removeEventListener('wheel',this.mouseWheel.bind(this),(supportsPassive ? { passive: true } : false));\r\n    }\r\n}\r\n\r\nclass SplashState extends State {\r\n    \r\n    constructor() {\r\n        super();\r\n        /** @type {SplashScreen} */\r\n        this.splash = null;\r\n        /** @type {ImagesLoader} */\r\n        this.imageLoader = null;\r\n        this.done = false;\r\n        this.loadingDots = \"\";\r\n    }\r\n    \r\n    /** @param {Engine} engine */\r\n    init(engine) {\r\n        \r\n        this.imageLoader = new ImagesLoader(IMAGE_LIST, 'images/');\r\n        this.imageLoader.onDone = this.init2.bind(this, engine);\r\n        this.imageLoader.beginLoading();\r\n\r\n    }\r\n\r\n    /** @param {Engine} engine */\r\n    init2(engine) {\r\n        this.splash = new SplashScreen(IMAGE_LIST[TUNING.STARTUP_SPLASH.IMAGE_NUMBER].image);\r\n        engine.addChild(this.splash);\r\n        this.done = true;\r\n        super.initDone();\r\n    }\r\n\r\n    /** @param {Engine} engine */\r\n    cycle(engine) {\r\n        if (!this.done) {\r\n            if (this.loadingDots.length < 100) {\r\n                this.loadingDots += '.';\r\n            } else {\r\n                this.loadingDots = '';\r\n            }\r\n            engine.context.fillStyle = 'black';\r\n            engine.context.font = 'Consolas 20px';\r\n            let text = \"Loading Images\" + this.loadingDots;\r\n            engine.context.fillText(text, 320, 450);\r\n        }\r\n        if (engine.input.Button_Left && this.done) {\r\n            engine.setState(new LevelState());\r\n        }\r\n    }\r\n\r\n    /** @param {Engine} engine */\r\n    finish(engine) {\r\n        super.finish(engine);\r\n    }\r\n}\r\n\r\n/** @type {Engine} */\r\nvar game;\r\n\r\nwindow.onload = function() {\r\n\r\n    const DEBUG_STATUS = true;\r\n\r\n    let splash = new SplashState();\r\n    game = new Engine(document.getElementById('theCanvas'), splash, DEBUG_STATUS);\r\n    game.go();\r\n};"]}